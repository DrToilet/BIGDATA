col=c("red", "green"), pch = 20, cex = 0.75)
principal_components <- pr.out$x
colors = c("green","red")
plot(principal_components[,1:2], col = colors, pch = 20, main = "First two principal component")
legend(x=-6, y=5, legend = c("<=50K",">50K"),
col=c("red", "green"), pch = 20, cex = 0.75)
pr.out <- prcomp(adult_db_num_std[,c("age", "fnlwgt", "education_num", "capital_gain", "capital_loss", "hours_per_week")], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
# ******** PLOT FOR FIRST TWO PRINCIPAL COMPONENTS GOES HERE ****** #
colors = c("green","red")
plot(principal_components[,1:2], col = colors, pch = 20, main = "First two principal component")
legend(x=-6, y=5, legend = c("<=50K",">50K"),
col=c("red", "green"), pch = 20, cex = 0.75)
pr.out <- prcomp(adult_db_num_std[,c("age", "fnlwgt", "education_num", "capital_gain", "capital_loss", "hours_per_week")], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
# ******** PLOT FOR FIRST TWO PRINCIPAL COMPONENTS GOES HERE ****** #
plot(principal_components[,1:2], col = (class_val + 2), pch = 20, main = "First two principal component")
legend(x=-6, y=5, legend = c("<=50K",">50K"),
col=c("red", "green"), pch = 20, cex = 0.75)
pr.out <- prcomp(adult_db_num_std[,c("age", "fnlwgt", "education_num", "capital_gain", "capital_loss", "hours_per_week")], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
# ******** PLOT FOR FIRST TWO PRINCIPAL COMPONENTS GOES HERE ****** #
plot(principal_components[,1:2], col = (class_val + 2), pch = 20, main = "First two principal component")
legend(x=-6, y=5, legend = c("<=50K",">50K"),
col=c("red", "green"), pch = 20, cex = 0.75)
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
# Download “Breast Cancer Wisconsin (Prognostic)” dataset from UCI Machine Learning Repository
# missing values are denoted by “?”. Remove the rows with missing values. First column is a unique patient ID, so remove it. Last column is a class label, remove it before clustering.
breast_cancer_db <- read.table(file = "http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data",header = FALSE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
na.omit(breast_cancer_db)
names(breast_cancer_db) = c("Sample code number",
"Clump Thickness",
"Uniformity of Cell Size",
"Uniformity of Cell Shape",
"Marginal Adhesion",
"Single Epithelial Cell Size",
"Bare Nuclei",
"Bland Chromatin",
"Normal Nucleoli",
"Mitoses",
"Class")
breast_cancer_db$`Sample code number`<- NULL
breast_cancer_db$Class<-NULL
# Find the best number of clusters (value of K) for K-means algorithm.
# Use elbow heuristics in a plot of K vs. total within SS.
x1 <- rnorm(500, sd = 0.3)
x2 <- rnorm(500, mean = 4, sd = 0.3)
breast_cancer_DF <- as.data.frame(cbind(x1, x2))
plot(breast_cancer_DF)
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
plot(breast_cancer_DF, col = km_cl$cluster, pch = 20)
points(km_cl$centers,  pch = 10, cex = 4, lwd=3)
data(iris)
iris[,1:4] <- scale(iris[,1:4])
within_ss <- numeric(6)
for(i in 1:6){
km.cl <- kmeans(iris[,1:4], centers = i, nstart = 10)
print(paste("clusters:",i," total within ss:",km.cl$tot.withinss))
within_ss[i] <- km.cl$tot.withinss
}
plot(x = 1:6, y = within_ss, type='b', xlab = "number of centers K", ylab = "total within SS" )
# Run K Means algorithm to cluster the data using the best value of K discovered.
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
# Perform PCA on the data and plot first two PCs where points are color coded according to the cluster they belong to.
pr.out <- prcomp(breast_cancer_DF[,], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
pr.out <- prcomp(breast_cancer_DF[,], scale = TRUE, center = TRUE)
pr.out <- prcomp(breast_cancer_DF[,], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
pr.out <- prcomp(breast_cancer_DF[,], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (breast_cancer_DF + 2), pch = 20, main = "First two principal component")
km_cl <- kmeans(breast_cancer_db, centers = 3, nstart = 5)
pr.out <- prcomp(breast_cancer_db[,], scale = TRUE, center = TRUE)
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (breast_cancer_db + 2), pch = 20, main = "First two principal component")
# Perform PCA on the data and plot first two PCs where points are color coded according to the cluster they belong to.
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (breast_cancer_db + 2), pch = 20, main = "First two principal component")
plot(principal_components[,1:2], col = (breast_cancer_DF), pch = 20, main = "First two principal component")
install.packages("cluster")
kmed.clara <- clara(iris[,1:4], k = 3, samples = 10, metric = "manhattan")
library("cluster")
kmed.clara <- clara(iris[,1:4], k = 3, samples = 10, metric = "manhattan")
plot(iris[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
points(kmed.clara$medoids, pch = c("1","2","3"), cex = 2, lwd=3)
plot(iris[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
table(kmed.clara$clustering, iris$Species)
kmed.clara <- clara(iris[,1:4], k = 3, samples = 10, metric = "manhattan")
plot(iris[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
points(kmed.clara$medoids, pch = c("1","2","3"), cex = 2, lwd=3)
table(kmed.clara$clustering, iris$Species)
kmed.clara <- clara(iris[,1:4], k = 3, samples = 10, metric = "manhattan")
plot(iris[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
points(kmed.clara$medoids, pch = c("1","2","3"), cex = 2, lwd=3)
kmed.clara
# Download “Breast Cancer Wisconsin (Prognostic)” dataset from UCI Machine Learning Repository
# missing values are denoted by “?”. Remove the rows with missing values. First column is a unique patient ID, so remove it. Last column is a class label, remove it before clustering.
breast_cancer_db <- read.table(file = "http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data",header = FALSE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
na.omit(breast_cancer_db)
names(breast_cancer_db) = c("Sample code number",
"Clump Thickness",
"Uniformity of Cell Size",
"Uniformity of Cell Shape",
"Marginal Adhesion",
"Single Epithelial Cell Size",
"Bare Nuclei",
"Bland Chromatin",
"Normal Nucleoli",
"Mitoses",
"Class")
breast_cancer_db$`Sample code number`<- NULL
breast_cancer_db$Class<-NULL
# Find the best number of clusters (value of K) for K-means algorithm.
# Use elbow heuristics in a plot of K vs. total within SS.
x1 <- rnorm(500, sd = 0.3)
x2 <- rnorm(500, mean = 4, sd = 0.3)
breast_cancer_DF <- as.data.frame(cbind(x1, x2))
plot(breast_cancer_DF)
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
plot(breast_cancer_DF, col = km_cl$cluster, pch = 20)
points(km_cl$centers,  pch = 10, cex = 4, lwd=3)
data(iris)
iris[,1:4] <- scale(iris[,1:4])
within_ss <- numeric(6)
for(i in 1:6){
km.cl <- kmeans(iris[,1:4], centers = i, nstart = 10)
print(paste("clusters:",i," total within ss:",km.cl$tot.withinss))
within_ss[i] <- km.cl$tot.withinss
}
plot(x = 1:6, y = within_ss, type='b', xlab = "number of centers K", ylab = "total within SS" )
# Run K Means algorithm to cluster the data using the best value of K discovered.
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
# Perform PCA on the data and plot first two PCs where points are color coded according to the cluster they belong to.
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (breast_cancer_DF), pch = 20, main = "First two principal component")
# Run K Medoids algorithm on the data set and see how many points are misclassified in the cluster.
# install.packages("cluster")
library("cluster")
kmed.clara <- clara(iris[,1:4], k = 3, samples = 10, metric = "manhattan")
plot(iris[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
points(kmed.clara$medoids, pch = c("1","2","3"), cex = 2, lwd=3)
data(iris)
View(breast_cancer_db)
View(breast_cancer_db)
View(breast_cancer_DF)
View(breast_cancer_DF)
kmed
kmed.clara
library("cluster")
kmed.clara <- clara(breast_cancer_db[,1:4], k = 3, samples = 10, metric = "manhattan")
plot(breast_cancer_db[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
points(kmed.clara$medoids, pch = c("1","2","3"), cex = 2, lwd=3)
library("cluster")
kmed.clara <- clara(breast_cancer_DF[,1:4], k = 3, samples = 10, metric = "manhattan")
plot(breast_cancer_DF[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
points(kmed.clara$medoids, pch = c("1","2","3"), cex = 2, lwd=3)
# Download “Breast Cancer Wisconsin (Prognostic)” dataset from UCI Machine Learning Repository
# missing values are denoted by “?”. Remove the rows with missing values. First column is a unique patient ID, so remove it. Last column is a class label, remove it before clustering.
breast_cancer_db <- read.table(file = "http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data",header = FALSE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
na.omit(breast_cancer_db)
names(breast_cancer_db) = c("Sample code number",
"Clump Thickness",
"Uniformity of Cell Size",
"Uniformity of Cell Shape",
"Marginal Adhesion",
"Single Epithelial Cell Size",
"Bare Nuclei",
"Bland Chromatin",
"Normal Nucleoli",
"Mitoses",
"Class")
breast_cancer_db$`Sample code number`<- NULL
breast_cancer_db$Class<-NULL
# Find the best number of clusters (value of K) for K-means algorithm.
# Use elbow heuristics in a plot of K vs. total within SS.
x1 <- rnorm(500, sd = 0.3)
x2 <- rnorm(500, mean = 4, sd = 0.3)
breast_cancer_DF <- as.data.frame(cbind(x1, x2))
plot(breast_cancer_DF)
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
plot(breast_cancer_DF, col = km_cl$cluster, pch = 20)
points(km_cl$centers,  pch = 10, cex = 4, lwd=3)
data(iris)
iris[,1:4] <- scale(iris[,1:4])
within_ss <- numeric(6)
for(i in 1:6){
km.cl <- kmeans(iris[,1:4], centers = i, nstart = 10)
print(paste("clusters:",i," total within ss:",km.cl$tot.withinss))
within_ss[i] <- km.cl$tot.withinss
}
plot(x = 1:6, y = within_ss, type='b', xlab = "number of centers K", ylab = "total within SS" )
# Run K Means algorithm to cluster the data using the best value of K discovered.
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
# Perform PCA on the data and plot first two PCs where points are color coded according to the cluster they belong to.
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (breast_cancer_DF), pch = 20, main = "First two principal component")
# Run K Medoids algorithm on the data set and see how many points are misclassified in the cluster.
# install.packages("cluster")
library("cluster")
kmed.clara <- clara(breast_cancer_DF[,1:4], k = 3, samples = 10, metric = "manhattan")
plot(breast_cancer_DF[,1:2], col = kmed.clara$clustering, pch = as.character(kmed.clara$clustering), cex = 0.7)
points(kmed.clara$medoids, pch = c("1","2","3"), cex = 2, lwd=3)
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = col, pch = 20, main = "First two principal component")
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = col, pch = 20, main = "First two principal component")
# Download “Breast Cancer Wisconsin (Prognostic)” dataset from UCI Machine Learning Repository
# missing values are denoted by “?”. Remove the rows with missing values. First column is a unique patient ID, so remove it. Last column is a class label, remove it before clustering.
breast_cancer_db <- read.table(file = "http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data",header = FALSE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
na.omit(breast_cancer_db)
names(breast_cancer_db) = c("Sample code number",
"Clump Thickness",
"Uniformity of Cell Size",
"Uniformity of Cell Shape",
"Marginal Adhesion",
"Single Epithelial Cell Size",
"Bare Nuclei",
"Bland Chromatin",
"Normal Nucleoli",
"Mitoses",
"Class")
breast_cancer_db$`Sample code number`<- NULL
breast_cancer_db$Class<-NULL
# Find the best number of clusters (value of K) for K-means algorithm.
# Use elbow heuristics in a plot of K vs. total within SS.
x1 <- rnorm(500, sd = 0.3)
x2 <- rnorm(500, mean = 4, sd = 0.3)
breast_cancer_DF <- as.data.frame(cbind(x1, x2))
plot(breast_cancer_DF)
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
plot(breast_cancer_DF, col = km_cl$cluster, pch = 20)
points(km_cl$centers,  pch = 10, cex = 4, lwd=3)
data(iris)
iris[,1:4] <- scale(iris[,1:4])
within_ss <- numeric(6)
for(i in 1:6){
km.cl <- kmeans(iris[,1:4], centers = i, nstart = 10)
print(paste("clusters:",i," total within ss:",km.cl$tot.withinss))
within_ss[i] <- km.cl$tot.withinss
}
plot(x = 1:6, y = within_ss, type='b', xlab = "number of centers K", ylab = "total within SS" )
# Run K Means algorithm to cluster the data using the best value of K discovered.
km_cl <- kmeans(breast_cancer_DF, centers = 3, nstart = 5)
# Perform PCA on the data and plot first two PCs where points are color coded according to the cluster they belong to.
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = col, pch = 20, main = "First two principal component")
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (breast_cancer_DF), pch = 20, main = "First two principal component")
# Perform PCA on the data and plot first two PCs where points are color coded according to the cluster they belong to.
breast_cancer_db_std <- scale(breast_cancer_db)
mean(breast_cancer_db_std)
sd(breast_cancer_db)
# Perform PCA on the data and plot first two PCs where points are color coded according to the cluster they belong to.
breast_cancer_db_std <- scale(breast_cancer_db)
mean(breast_cancer_db_std)
sd(breast_cancer_db)
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db_std[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (breast_cancer_db_std), pch = 20, main = "First two principal component")
breast_cancer_db_numeric <- breast_cancer_db[,c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")]
class_val <- as.numeric(breast_cancer_db_numeric[,c("class")])
breast_cancer_db_numeric <- breast_cancer_db[,c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")]
class_val <- as.numeric(breast_cancer_db_numeric[c("class")])
breast_cancer_db_numeric <- breast_cancer_db[,c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")]
class_val <- as.numeric(breast_cancer_db_numeric[,c("class")])
breast_cancer_db_numeric <- breast_cancer_db[,c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")]
class_val <- as.numeric(breast_cancer_db[,c("class")])
breast_cancer_db_numeric <- breast_cancer_db[,c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")]
class_val <- as.numeric(breast_cancer_db[,c("class")])
breast_cancer_db_std <- scale(breast_cancer_db)
mean(breast_cancer_db_std)
sd(breast_cancer_db)
col <-c("Clump Thickness", "Uniformity of Cell Size", "Uniformity of Cell Shape", "Marginal Adhesion", "Single Epithelial Cell Size", "Bare Nuclei", "Bland Chromatin", "Normal Nucleoli", "Mitoses")
pr.out <- prcomp(breast_cancer_db_std[col], scale = TRUE, center = TRUE)
names(pr.out)
head(pr.out$x)
principal_components <- pr.out$x
plot(principal_components[,1:2], col = (class_val+2), pch = 20, main = "First two principal component")
setwd("~/Desktop/BIGDATA")
myPath <- "/Users/Giacomo/Desktop/BIGDATA/FP.R"
myData <- read.csv(myPath)
head(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$salary <- factor(myData$salary,levels=c("low","medium","high"),labels =c(0,1,2))
library("rpart.plot")
set.seed(1)
train.idx <- sample(1:nrow(myData), size = round(0.8 * nrow(myData)), replace = FALSE)
train.set <- myData[train.idx,]
test.set <- myData[-train.idx,]
dt <- rpart(left ~ ., data =train.set , method = 'class')
plot(dt)
library("rpart.plot")
myPath <- "/Users/Giacomo/Desktop/BIGDATA/FP.R"
myData <- read.csv(myPath)
head(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
View(myData)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
library("rpart.plot")
install.packages("rpart.plot")
library("rpart.plot")
set.seed(1)
train.idx <- sample(1:nrow(myData), size = round(0.8 * nrow(myData)), replace = FALSE)
train.set <- myData[train.idx,]
test.set <- myData[-train.idx,]
dt <- rpart(left ~ ., data =train.set , method = 'class')
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$sales<- as.numeric(factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10)))
myData
myPath <- "/Users/Giacomo/Desktop/BIGDATA/FP.R"
myData <- read.csv(file=myPath)
head(myData)
head(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myPath <- "/Users/Giacomo/Desktop/BIGDATA/FP.R"
myData <- read.csv(file=myPath)
myData
myData <- read.csv(file=myPath)
table(myData$left)
View(myData)
table(myData$left)
MyData1 <- read.csv(file="/Users/Giacomo/Desktop/BIGDATA/FP.R", header=TRUE, sep=",")
myData <- read.csv(file=myPath)
setwd("~/Desktop/BIGDATA")
myPath <- "/Users/Giacomo/Desktop/BIGDATA/FP.R"
myData <- read.csv(file=myPath)
myData<-read.table(myPath)
myData <- read.csv(file="/Users/Giacomo/Desktop/BIGDATA/FP.R")
myhead(myData)
setwd("~/Desktop/BIGDATA")
setwd("~/Desktop/BIGDATA")
myData <- read.csv(file="/Users/Giacomo/Desktop/BIGDATA/FP.R")
View(myData)
setwd("~/Desktop/BIGDATA")
myData <- read.csv(file="/Users/Giacomo/Desktop/BIGDATA/FP.R")
myhead(myData)
myHead(myData)
setwd("~/Desktop/BIGDATA")
myData <- read.csv("/Users/Giacomo/Desktop/BIGDATA/FP.R")
myHead(myData)
head(myData)
setwd("~/Desktop/BIGDATA")
myData <- read.csv("/Users/Giacomo/Desktop/BIGDATA/FP.R")
head(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData2 <- read.table(file = "/Users/Giacomo/Desktop/BIGDATA/FP.R",
header = FALSE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
myData2 <- read.table(file = "/Users/Giacomo/Desktop/BIGDATA/FP.R",header = FALSE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
myData2 <- read.csv(file = "/Users/Giacomo/Desktop/BIGDATA/FP.R",header = FALSE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
head(myData2)
myData2 <- read.csv(file = "/Users/Giacomo/Desktop/BIGDATA/FP.R",header = TRUE, sep = ",", na.strings = "?", strip.white = TRUE, stringsAsFactors = FALSE)
head(myData2)
myData$salary <- factor(myData$salary,levels=c("low","medium","high"),labels =c(0,1,2))
myData2 <-data.frame(myData)
View(myData2)
myData2
setwd("~/Desktop/BIGDATA")
myData <- read.csv(file="/Users/Giacomo/Desktop/BIGDATA/FP.R")
setwd("~/Desktop/BIGDATA")
clear
clc
setwd("~/Desktop/BIGDATA")
myData <- read.csv(file="/Users/Giacomo/Desktop/BIGDATA/FP.R")
myData <- read.csv("/Users/Giacomo/Desktop/BIGDATA/FP.R")
myData <- read.csv("/Users/Giacomo/Desktop/BIGDATA/FP.R")
setwd("~/Desktop/BIGDATA")
myData <- read.csv("/Users/Giacomo/Desktop/BIGDATA/HR_comma_sep.csv")
head(myData)
myData <- read.csv(file="/Users/Giacomo/Desktop/BIGDATA/HR_comma_sep.csv")
head(myData)
myData2 <-data.frame(myData)
View(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$salary <- factor(myData$salary,levels=c("low","medium","high"),labels =c(0,1,2))
library("rpart.plot")
set.seed(1)
train.idx <- sample(1:nrow(myData), size = round(0.8 * nrow(myData)), replace = FALSE)
train.set <- myData[train.idx,]
test.set <- myData[-train.idx,]
dt <- rpart(left ~ ., data =train.set , method = 'class')
plot(dt)
text(dt, pretty = 0)
rpart.plot(dt)
dtPred <- predict(dt,train.set,type='class')
table(dtPred,train.set$left)
svm.model <- svm(formula = left ~ ., data = train.set, kernel = "radial", cost = 1, probability = TRUE)
install.packages("e1071")
install.packages(pkgs = . , repos = NULL)
library("e1071")
library("e1071")
svm.model <- svm(formula = left ~ ., data = train.set, kernel = "radial", cost = 1, probability = TRUE)
svm.pred <-predict(svm.model, newdata = test.set,probability = TRUE)
class.probs <- attr(svm.pred, "probabilities")
pred2 <- prediction(class.probs[,2], test.set$left)
myWD <-("~/Desktop/BIGDATA")
setwd(myWD)
install.packages("e1071")
MY_WD <-("~/Desktop/BIGDATA")
PATH <-("/Users/Giacomo/Desktop/BIGDATA/HR_comma_sep.csv")
install.packages(rpart.plot)
setwd(MY_WD)
myData <- read.csv(file=PATH)
View(myData)
head(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$salary <- factor(myData$salary,levels=c("low","medium","high"),labels =c(0,1,2))
library("rpart.plot")
set.seed(1)
train.idx <- sample(1:nrow(myData), size = round(0.8 * nrow(myData)), replace = FALSE)
setwd("~/Desktop/BIGDATA/final_project")
MY_WD <-("~/Desktop/BIGDATA/final_project")
PATH <-("/Users/Giacomo/Desktop/BIGDATA/final_project/HR_comma_sep.csv")
install.packages(rpart.plot)
setwd(MY_WD)
myData <- read.csv(file=PATH)
head(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$salary <- factor(myData$salary,levels=c("low","medium","high"),labels =c(0,1,2))
library("rpart.plot")
set.seed(1)
train.idx <- sample(1:nrow(myData), size = round(0.8 * nrow(myData)), replace = FALSE)
train.set <- myData[train.idx,]
test.set <- myData[-train.idx,]
dt <- rpart(left ~ ., data =train.set , method = 'class')
plot(dt)
text(dt, pretty = 0)
rpart.plot(dt)
dtPred <- predict(dt,train.set,type='class')
MY_WD <-("~/Desktop/BIGDATA/final_project")
PATH <-("/Users/Giacomo/Desktop/BIGDATA/final_project/HR_comma_sep.csv")
setwd(MY_WD)
myData <- read.csv(file=PATH)
head(myData)
table(myData$left)
myData$sales<- factor(myData$sales,levels = c("sales","accounting","hr","technical","support","management","IT","product_mng","marketing","RandD"),labels = c(1,2,3,4,5,6,7,8,9,10))
myData$salary <- factor(myData$salary,levels=c("low","medium","high"),labels =c(0,1,2))
library("rpart.plot")
set.seed(1)
train.idx <- sample(1:nrow(myData), size = round(0.8 * nrow(myData)), replace = FALSE)
train.set <- myData[train.idx,]
test.set <- myData[-train.idx,]
dt <- rpart(left ~ ., data =train.set , method = 'class')
plot(dt)
text(dt, pretty = 0)
rpart.plot(dt)
library('ROCR')
dtPred <- predict(dt,newdata=test.set,type="prob")[,2]
table(dtPred,test.set$left)
pred2 = prediction(dtPred,test.set$left)
plot(performance(pred2,"tpr","fpr"))
abline(0, 1, lty = 2)
auc <- unlist(attr(performance(pred2, "auc"), "y.values"))
print(auc)
legend("bottomright", sprintf("%.3f",auc), title = "AUC")
